import os

import numpy as np
import pandas as pd

from ..utils.feature_tools import load_features
from ..utils.general_utils import dec_timer, load_configs, sel_log
from .e007_timestamp_features import e007_timestamp_features


def _meta_features(df, exp_ids):
    _features = []
    if 'e007' in exp_ids:
        _features.append(e007_timestamp_features(df))
    features = pd.concat(_features, axis=1)
    return features


@dec_timer
def _load_meta_features(
        exp_ids, trn_tst_df, trn_df, tst_df, logger):
    target_ids = [
        'e007',
    ]
    if len(set(target_ids) & set(exp_ids)) < 1:
        sel_log(f'''
                ======== {__name__} ========
                Stop feature making because even 1 element in exp_ids
                    {exp_ids}
                does not in target_ids
                    {target_ids}''', logger)
        return None, None, None

    sel_log(f'creating trn_tst_df ...', None)
    configs = load_configs('./feature_config.yml', logger)
    features = []
    for exp_id in exp_ids:
        features += configs[exp_id]
    features = sorted(np.unique(features).tolist())
    trn_tst_df = load_features(
        features,
        './inputs/features/',
        os.cpu_count(),
        logger)

    return trn_tst_df, None, None
