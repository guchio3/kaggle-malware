import os

import pandas as pd
from sklearn.preprocessing import LabelEncoder
from tqdm import tqdm

from tools.utils.encoding import label_encoding
from tools.utils.feature_tools import load_features, save_features
from tools.utils.general_utils import load_configs


def encode_features(config, enc_type, base_dir='./inputs/features/',
                    logger=None):
    features = config['e000_features']
    base_features_df = load_features(features, base_dir)
    if enc_type == 'le':
        # should i return encoder here?
        enc_features_df, le_dict = label_encoding(base_features_df,
                                                  fit_columns=features)
        enc_features_df.columns = [
            'le_' + col for col in enc_features_df.columns]
    else:
        raise Exception('invalid enc_type')
    save_features(enc_features_df, base_dir, os.cpu_count() - 1, logger)
    return enc_features_df


if __name__ == '__main__':
    le_config = load_configs('enc_config.yml')
    enc_features_df = encode_features(le_config, 'le')
    print(enc_features_df.head())
