import gc
import sys
import time
from logging import getLogger

import joblib
import pandas as pd

from tools.utils.general_utils import (dec_timer, logInit, parse_args, sel_log,
                                       send_line_notification)


@dec_timer
def e000_first_preprocess(logger):
    # load train
    trn_load_filename = './inputs/origin/train.csv.zip'
    sel_log(f'loading {trn_load_filename} ...', logger)
    trn_df = pd.read_csv(trn_load_filename, compression='zip')

    # resave train
    trn_save_filename = './inputs/prep/train.jbl.gz'
    sel_log(f'saving {trn_save_filename} ...', logger)
    joblib.dump(trn_df, trn_save_filename, compress="gzip")

    # load test
    tst_load_filename = './inputs/origin/test.csv.zip'
    sel_log(f'loading {tst_load_filename} ...', logger)
    tst_df = pd.read_csv('./inputs/origin/test.csv.zip', compression='zip')

    # resave test
    tst_save_filename = './inputs/prep/test.jbl.gz'
    sel_log(f'loading {tst_load_filename} ...', logger)
    joblib.dump(tst_df, tst_save_filename, compress="gzip")


def preprocess(args, logger):
    if 'e000' in args.exp_ids:
        e000_first_preprocess(logger)


if __name__ == '__main__':
    t0 = time.time()
    logger = getLogger(__name__)
    logger = logInit(logger, './logs/', 'preprocess.log')
    args = parse_args(logger)

    logger.info('')
    logger.info('')
    logger.info(
        f'============ EXP {args.exp_ids[0]}, START PREPROCESSING =============')
    preprocess(args, logger)
    prec_time = time.time() - t0
    send_line_notification(
        f'Finished: {" ".join(sys.argv)} in {prec_time:.1f} s !')
